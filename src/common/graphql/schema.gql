# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type GlobalConfig {
  id: String
  allowedCheckInBefore: Int
  allowedCheckInAfter: Int
  isWorkLogEnabled: Boolean
  isVacationEnabled: Boolean
  isScheduleEnabled: Boolean
  isCheckInEnabled: Boolean
  isCheckOutEnabled: Boolean
  createdAt: DateTime
  updatedAt: DateTime
  company: Company
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Organization {
  id: String
  name: String
  address: String
  lat: String
  lng: String
  description: String
  color: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  company: Company
  scheduleTemplate: [ScheduleTemplate!]!
}

type ScheduleCategory {
  id: String!
  scheduleCategoryName: String!
  colorCode: String!
  memo: String
  isOvertime: Boolean
  isNotHolidayWork: Boolean
}

type ScheduleTemplate {
  id: String!
  name: String!
  startTime: String!
  endTime: String!
  colorCode: String!
  memo: String
  scheduleCategory: ScheduleCategory
  organization: [Organization!]!
  roleCategory: [RoleCategory!]!
}

type RoleCategory {
  id: String!
  duty: String!
  memo: String
  colorCode: String!
  company: Company!
  scheduleTemplate: [ScheduleTemplate!]!
}

type Company {
  id: String
  name: String
  logoUrl: String
  rules: String
  memberCount: Int
  membership: MEMBERSHIP_TYPE
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  globalConfig: GlobalConfig
}

enum MEMBERSHIP_TYPE {
  FREE
  BASIC
  PRO
  ENTERPRISE
}

type Account {
  id: String!
  email: String!
  role: String
  member: Member
  company: Company
}

type Member {
  id: String!
  name: String!
  phone: String
  joinDate: String!
  exitDate: String
  memo: String
  isJoin: Boolean!
  leave: Int
  company: Company!
  roleCategory: RoleCategory
  organization: Organization
}

type VacationCategory {
  id: String!
  name: String!
  timeOption: String!
  memo: String
  paidTime: Int!
  deductionDays: Float!
  organization: Organization!
  roleCategory: RoleCategory!
}

type Vacation {
  id: String!
  vacationEnd: DateTime!
  vacationStart: DateTime!
  description: String!
  member: Member
  company: Company
  vacationCategory: VacationCategory
}

type Schedule {
  id: String!
  startWorkTime: String
  endWorkTime: String
  memo: String
  date: DateTime!
  member: Member!
  company: Company!
  organization: Organization!
  roleCategory: RoleCategory!
  scheduleTemplate: ScheduleTemplate!
  scheduleCategory: ScheduleCategory!
}

type WorkCheck {
  id: String!
  workDay: DateTime!
  workingTime: DateTime
  quittingTime: DateTime
  workCheckMemo: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  member: Member!
  company: Company!
  organization: Organization!
  schedule: Schedule!
  roleCategory: RoleCategory!
}

type VacationIssue {
  id: String!
  startingPoint: DateTime!
  expirationDate: DateTime!
  vacationAll: Int!
  useVacation: Int!
  remaining: Int!
  description: String!
  member: Member!
  company: Company
  organization: Organization!
}

type Holiday {
  id: String!
  dateName: String
  locdate: String
  premuimRate: Int
  year: String
}

type File {
  id: String!
  url: String!
  name: String!
  createdAt: DateTime!
}

type NoticeBoard {
  id: String!
  title: String!
  contents: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  account: Account!
}

type Query {
  fetchAllNoticeBoards: [NoticeBoard!]!
  fetchOneNoticeBoard(noticeBoardId: String!): NoticeBoard!

  """Fetch RoleCategory"""
  fetchRoleCategory(roleCategoryId: String!): RoleCategory!

  """Fetch RoleCategorys"""
  fetchRoleCategorys: [RoleCategory!]!

  """근무일정 템플릿 전체 조회"""
  fetchAllScheduleTemplates: [ScheduleTemplate!]!

  """근무일정 유형 전체 조회"""
  fetchAllScheduleCategories: [ScheduleCategory!]!

  """관리자 휴가 발생 조회"""
  fetchVacationIssues(companyId: String!): [VacationIssue!]!

  """관리자 휴가 발생Id 조회"""
  fetchVacationIssue(vacationIssueId: String!): VacationIssue!

  """관리자 비활성화된 사원도 같이조회"""
  fetchVacationIssueWithDelete: [VacationIssue!]!

  """관리자 EndDate가 기준일자인 휴가발생 조회하기"""
  fetchVacationIssueBaseDate(baseDate: DateTime!, companyId: String!): [[VacationIssue!]!]!

  """관지라 EndDate가 기준일자이고, 퇴사자랑 같이 조회"""
  fetchVacationIssueWithBaseDateDelete(baseDate: DateTime!, companyId: String!): [[VacationIssue!]!]!

  """관리자 기준일자 기준으로 앞에 발생된 휴가 목록 조회"""
  fetchVacationIssueDetailDate(baseDate: DateTime!, companyId: String!): [[VacationIssue!]!]!

  """관리자 기준일자 기준으로 앞에 발생된 휴가 퇴사자랑 같이 조회"""
  fetchVacationIssueDetailDateDelete(baseDate: DateTime!, companyId: String!): [[VacationIssue!]!]!

  """휴가 발생특정날짜 모두조회"""
  fetchVacationIssueWithDate(startDate: DateTime!, endDate: DateTime!): [VacationIssue!]!

  """해당 회사에 속하는 member들의 출퇴근 기록 조회"""
  fetchCompanyWorkChecks(companyId: String!): [WorkCheck!]!

  """member개인의 출퇴근 기록 조회"""
  fetchMemberWorkChecks(memberId: String!): [WorkCheck!]!

  """회사 지점에 속한 멤버들의 출퇴근 기록을 월별로 조회"""
  fetchMonthWorkChecks(comapnyId: String!, month: String!): [[WorkCheck!]!]!

  """지정된 기간동안의 회사+지점에 속한 멤버들의 출퇴근 기록 조회"""
  fetchDateMemberWorkChecks(companyId: String!, organizationId: [String!], startDate: DateTime!, endDate: DateTime!): [WorkCheck!]!

  """회사 정보 조회"""
  fetchCompanyDetail(companyId: String!): Company! @deprecated(reason: "Initializing Status / Need Update")

  """조직 리스트 조회"""
  fetchOrganizations(companyId: String!): [Organization!]!

  """조직 상세 조회"""
  fetchOrganizationDetail(organizationId: String!): Organization!

  """comanyId에 해당하는 멤버 전체 조회"""
  fetchMembers(companyId: String!): [Member!]!

  """memberId(사원ID)로 개별 조회"""
  fetchMember(memberId: String!): Member!

  """휴가유형 전체 찾기"""
  fetchVacationCategorys(organizationid: String!): [VacationCategory!]!

  """휴가유형ID를 적어서 하나의 유형 찾기"""
  fetchVacationCategory(vacationCategoryId: String!): VacationCategory!

  """(관리자) 휴가 전체 조회"""
  fetchVacations(companyId: String!): [Vacation!]!

  """(관리자) 기간 내 휴가 조회"""
  fetchVacationWithDate(vacationStart: DateTime!, vacationEnd: DateTime!): [Vacation!]!

  """(관리자) 휴가 ID를 통한 휴가 조회"""
  fetchVacation(vacationId: String!): Vacation!

  """(관리자) 퇴사자와 함께 조회"""
  fetchVacationWithDelete: [Vacation!]!
  fetchAccount: Account!
  fetchAccounts: Account!

  """이번주 근무일정 조회"""
  fetchWeekSchedule(today: DateTime!, companyId: String!): [Schedule!]!

  """멤버의 근무일정 조회"""
  fetchMemberSchedule(memberId: String!): [Schedule!]!

  """Fetch Holidays in ASC order"""
  fetchHolidays: [Holiday!]!
  fetchGlobalConfig(companyId: String!): GlobalConfig!
}

type Mutation {
  createNoticeBoard(createNoticeBoardInput: CreateNoticeBoardInput!): NoticeBoard!
  updateNoticeBoard(noticeBoardId: String!, updateNoticeBoardInput: UpdateNoticeBoardInput!): NoticeBoard!
  deleteNoticeBoard(noticeBoardId: String!): Boolean!
  createRoleCategory(createRoleCategoryInput: CreateRoleCategoryInput!): RoleCategory!

  """Update RoleCategory"""
  updateRoleCategory(roleCategoryId: String!, updateRoleCategoryInput: UpdateRoleCategoryInput!): RoleCategory!

  """Delte RoleCategory by useing roleCategoryId"""
  deleteRoleCategory(roleCategoryId: String!): Boolean!

  """근무일정 템플릿 생성"""
  createScheduleTemplate(createScheduleTemplateInput: CreateScheduleTemplateInput!): ScheduleTemplate!

  """근무일정 템플릿 수정"""
  updateScheduleTemplate(scheduleTemplateId: String!, updateScheduleTemplateInput: UpdateScheduleTemplatInput!): ScheduleTemplate!

  """근무일정 템플릿 단일 삭제"""
  deleteScheduleTemplate(scheduleTemplateId: String!): Boolean!

  """근무일정 템플릿 다수 삭제"""
  deleteManyScheduleTemplate(scheduleTemplateId: [String!]!): String!

  """근무일정 유형 생성"""
  createScheduleCategory(createScheduleCategoryInput: CreateScheduleCategoryInput!): ScheduleCategory!

  """근무일정 유형 수정"""
  updateScheduleCategory(scheduleCategoryId: String!, updateScheduleCategoryInput: UpdateScheduleCategoryInput!): ScheduleCategory!

  """근무일정 유형 삭제"""
  deleteScheduleCategory(scheduleCategoryId: String!): Boolean!

  """초대코드 발송"""
  sendCodeToEmail(companyId: String!, memberId: String!, email: String!): String!

  """초대코드 확인"""
  checkInvitationCode(memberId: String!, invitationCode: String!): String!

  """관리자 휴가 발생 만들기"""
  createVacationIssue(createVacationIssueInput: CreateVacationIssueInput!): VacationIssue!

  """관리자 휴가 발생 수정하기"""
  updateVacationIssue(vacationIssueId: String!, updateVacationIssueInput: UpdateVacationIssueInput!): VacationIssue!

  """관리자 휴가 발생 삭제하기"""
  deleteVacationIssue(vacationIssueId: String!): Boolean!
  login(email: String!, password: String!): String!
  restoreAccessToken: String!

  """관리자용 출퇴근기록 생성하기"""
  createAdminWorkCheck(companyId: String!, createWorkCheckInput: CreateWorkCheckInput!): WorkCheck!

  """근무노트 생성"""
  createWorkCheckMemo(workCheckId: String!, workCheckMemo: String!): WorkCheck!

  """출근기록 자동 생성"""
  createStartWorkCheck(memberId: String!): WorkCheck!

  """퇴근기록 자동 생성"""
  createEndWorkCheck(workCheckId: String!): WorkCheck!

  """출퇴근기록 수정"""
  updateWorkCheck(workCheckId: String!, updateWorkCheckInput: UpdateWorkCheckInput!): WorkCheck!

  """출퇴근기록 삭제"""
  deleteWorkCheck(workCheckId: String!): Boolean!

  """회사 신규 가입"""
  createCompany(createCompanyInput: CreateCompanyInput!): Company!

  """회사 정보 수정"""
  updateCompany(companyId: String!, updateCompanyInput: CreateCompanyInput!): Company!

  """회사 정보 영구 삭제 / 복구 불가능하므로 사용 주의"""
  deleteCompany(companyId: String!): Boolean!

  """조직 신규 생성"""
  createOrganization(createOrganizationInput: CreateOrganizationInput!): Organization!

  """조직 정보 수정"""
  updateOrganization(organizationId: String!, updateOrganizationInput: UpdateOrganizationInput!): Organization!

  """조직 정보 삭제"""
  deleteOrganization(organizationid: String!): Boolean!

  """멤버 정보 입력"""
  createMember(createMemberInput: CreateMemberInput!): Member!

  """멤버 정보 수정"""
  updateMember(memberId: String!, updateMemberInput: UpdateMemberInput!): Member!

  """멤버 정보 소프트 삭제"""
  softDeleteMember(memberId: String!): Boolean!

  """멤버 정보 완전 삭제"""
  deleteMember(memberId: String!): Boolean!

  """휴가유형 만들기"""
  createVacationCategory(createVacationCategoryInput: CreateVacationCategoryInput!): VacationCategory!

  """휴가유형Id와 Input을 적어 데이터 수정하기"""
  updateVacationCategory(vacationCategoryId: String!, updateVacationCategoryInput: UpdateVacationCategoryInput!): VacationCategory!

  """휴가유형ID로 데이터 완전 삭제하기"""
  deleteVacationCategory(vacationCategoryId: String!): Boolean!

  """(관리자) 휴가관리 만들기"""
  createVacation(createVacaionInput: CreateVacationInput!): [Vacation!]!

  """(관리자) 휴가 수정하기"""
  updateVacation(updateVacationInput: UpdateVacationInput!): [Vacation!]!

  """(관리자) 휴가 삭제 - DB에는 유지"""
  softdeleteVacation(vacationId: String!): Boolean!

  """(관리자) 휴가 완전 삭제"""
  deleteVacation(vacationId: String!): Boolean!
  createAccount(email: String!, password: String!): Account!

  """근무일정 생성"""
  createSchedule(dates: [DateTime!]!, createScheduleInput: CreateScheduleInput!): [Schedule!]!

  """근무일정 단일 수정"""
  updateOneSchedule(scheduleId: String!, updateScheduleInput: UpdateScheduleInput!): Schedule!

  """scheduleId로 찾은 근무일정 다수 수정"""
  updateAllSchedule(scheduleId: [String!]!, updateScheduleInput: UpdateScheduleInput!): [Schedule!]!

  """근무일정 단일 삭제"""
  deleteOneSchedule(scheduleId: String!): Boolean!

  """근무일정 다수 삭제"""
  deleteManySchedule(scheduleId: [String!]!): String!

  """Create Holiday such as company founding anniversary"""
  createHoliday(createHolidayInput: CreateHolidayInput!): Holiday!

  """
  Create holidays such as "설날"
  """
  createHolidays: String!
  createGlobalConfig(createGlobalConfigInput: CreateGlobalConfigInput!): GlobalConfig!
  updateGlobalConfig(updateGlobalConfigInput: UpdateGlobalConfigInput!): GlobalConfig!

  """Upload a single file / Max file size apporximatly 10M"""
  uploadSingleFile(file: Upload!): File!

  """Upload multiple files / Max total size approximatly 10M"""
  uploadMultipleFiles(files: [Upload!]!): [File!]!
}

input CreateNoticeBoardInput {
  title: String!
  contents: String!
}

input UpdateNoticeBoardInput {
  title: String
  contents: String
}

input CreateRoleCategoryInput {
  duty: String!
  memo: String!
  colorCode: String!
  companyId: String!
}

input UpdateRoleCategoryInput {
  duty: String
  memo: String
  colorCode: String
  companyId: String
}

input CreateScheduleTemplateInput {
  name: String!
  startTime: String!
  endTime: String!
  colorCode: String!
  memo: String
  scheduleCategoryId: String
  organizationId: [String!]!
  roleCategoryId: [String!]!
}

input UpdateScheduleTemplatInput {
  name: String
  startTime: String
  endTime: String
  colorCode: String
  memo: String
  scheduleCategoryId: String
  organizationId: [String!]
  roleCategoryId: [String!]
}

input CreateScheduleCategoryInput {
  scheduleCategoryName: String!
  colorCode: String!
  memo: String
  isOvertime: Boolean = false
  isNotHolidayWork: Boolean = false
}

input UpdateScheduleCategoryInput {
  scheduleCategoryName: String
  colorCode: String
  memo: String
  isOvertime: Boolean = false
  isNotHolidayWork: Boolean = false
}

input CreateVacationIssueInput {
  memberId: String!
  vacationAll: Int!
  startingPoint: DateTime!
  expirationDate: DateTime!
  description: String!
}

input UpdateVacationIssueInput {
  memberId: String
  vacationAll: Int
  startingPoint: DateTime
  expirationDate: DateTime
  description: String
}

input CreateWorkCheckInput {
  workDay: DateTime!
  workingTime: DateTime
  quittingTime: DateTime
  workCheckMemo: String
  memberId: String!
  scheduleId: String!
  organizationId: String!
  roleCategoryId: String!
}

input UpdateWorkCheckInput {
  workDay: DateTime
  workingTime: DateTime
  quittingTime: DateTime
  workCheckMemo: String
  memberId: String
  scheduleId: String
  organizationId: String
  roleCategoryId: String
}

input CreateCompanyInput {
  name: String
  logoUrl: String
  rules: String
  membership: MEMBERSHIP_TYPE
}

input CreateOrganizationInput {
  name: String!
  address: String!
  lat: String
  lng: String
  description: String
  color: String!
  companyId: String!
}

input UpdateOrganizationInput {
  name: String
  address: String
  lat: String
  lng: String
  description: String
  color: String
  companyId: String
}

input CreateMemberInput {
  name: String!
  phone: String
  isAdmin: Boolean = false
  joinDate: String!
  exitDate: String
  memo: String
  companyId: String!
  organizationId: String
  roleCategoryId: String
}

input UpdateMemberInput {
  name: String
  phone: String
  isAdmin: Boolean = false
  joinDate: String
  exitDate: String
  memo: String
  companyId: String
  organizationId: String
  roleCategoryId: String
}

input CreateVacationCategoryInput {
  vacationCategoryGroup: String!
  name: String!
  timeOption: String!
  memo: String
  paidTime: Int!
  deductionDays: Int!
  organizationId: String!
  roleCategoryId: String!
}

input UpdateVacationCategoryInput {
  vacationCategoryGroup: String
  name: String
  timeOption: String
  memo: String
  paidTime: Int
  deductionDays: Int
  organizationId: String
  roleCategoryId: String
}

input CreateVacationInput {
  vacations: [DateTime!]
  description: String
  vacationCategoryId: String
  memberId: String!
}

input UpdateVacationInput {
  vacations: [DateTime!]
  description: String
  vacationCategoryId: String
  memberId: String
}

input CreateScheduleInput {
  scheduleTemplateId: String!
  memberId: [String!]!
}

input UpdateScheduleInput {
  scheduleCategoryId: String
  organizationId: String
  roleCategoryId: String
  startWorkTime: String
  EndWorkTime: String
  memo: String
}

input CreateHolidayInput {
  dateName: String
  locdate: String
  premuimRate: Int
}

input CreateGlobalConfigInput {
  allowedCheckInBefore: Int = 10
  allowedCheckInAfter: Int = 12
  isWorkLogEnabled: Boolean = false
  isVacationEnabled: Boolean = false
  isScheduleEnabled: Boolean = false
  isCheckInEnabled: Boolean = false
  isCheckOutEnabled: Boolean = false
  companyId: String!
}

input UpdateGlobalConfigInput {
  allowedCheckInBefore: Int = 10
  allowedCheckInAfter: Int = 12
  isWorkLogEnabled: Boolean = false
  isVacationEnabled: Boolean = false
  isScheduleEnabled: Boolean = false
  isCheckInEnabled: Boolean = false
  isCheckOutEnabled: Boolean = false
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload