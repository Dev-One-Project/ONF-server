# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Member {
  memberId: String!
  lastName: String!
  firstName: String!
  isAdmin: Boolean
  joinDate: String!
  exitDate: String
  invitationCode: String!
  memo: String
  leave: Int
}

type VacationCategory {
  id: String!
  vacationCategoryGroup: String!
  name: String!
  timeOption: String!
  memo: String
  paidTime: Int!
  deductionDays: Float!
}

type Query {
  """
  휴가유형 전체 찾기
  """
  fetchVacationCategorys: [VacationCategory!]!

  """
  휴가유형ID를 적어서 하나의 유형 찾기
  """
  fetchVacationCategory(vacationCategoryId: String!): VacationCategory!
}
type Company {
  id: String
  name: String
  logoUrl: String
  rules: String
  memberCount: Int
  membership: MEMBERSHIP_TYPE
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
}

enum MEMBERSHIP_TYPE {
  FREE
  BASIC
  PRO
  ENTERPRISE
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  """
  회사 정보 조회
  """
  fetchCompanyDetail(companyId: String!): Company!
    @deprecated(reason: "Initializing Status / Need Update")

  """
  멤버 전체 조회
  """
  fetchMembers: [Member!]!

  """
  memberId(사원ID)로 개별 조회
  """
  fetchMember(memberId: String!): Member!
  fetchWorkChecks: [WorkCheck!]!
  fetchWorkCheck(memberId: String!): WorkCheck!
}

type Mutation {
  """
  휴가유형 만들기
  """
  createVacationCategory(
    createVacationCategoryInput: CreateVacationCategoryInput!
  ): VacationCategory!

  """
  휴가유형Id와 Input을 적어 데이터 수정하기
  """
  updateVacationCategory(
    vacationCategoryId: String!
    updateVacationCategoryInput: UpdateVacationCategoryInput!
  ): VacationCategory!

  """
  휴가유형ID로 데이터 완전 삭제하기
  """
  deleteVacationCategory(vacationCategoryId: String!): Boolean!

  """
  회사 신규 가입
  """
  createCompany(createCompanyInput: CreateCompanyInput!): Company!

  """
  회사 정보 수정
  """
  updateCompany(
    companyId: String!
    updateCompanyInput: CreateCompanyInput!
  ): Company!

  """
  회사 정보 영구 삭제 / 복구 불가능하므로 사용 주의
  """
  deleteCompany(companyId: String!): Boolean!

  """
  멤버 정보 입력
  """
  createMember(createMemberInput: CreateMemberInput!): Member!

  """
  멤버 정보 수정
  """
  updateMember(
    memberId: String!
    updateMemberInput: UpdateMemberInput!
  ): Member!

  """
  멤버 정보 삭제
  """
  deleteMember(memberId: String!): Boolean!
  createWorkCheck(createWorkCheckInput: CreateWorkCheckInput!): WorkCheck!
  updateWorkCheck(
    workCheckId: String!
    updateWorkCheckInput: UpdateWorkCheckInput!
  ): WorkCheck!
  deleteWorkCheck(workCheckId: String!): Boolean!
}

input CreateVacationCategoryInput {
  vacationCategoryGroup: String!
  name: String!
  timeOption: String!
  memo: String
  paidTime: Int!
  deductionDays: Int!
}

input UpdateVacationCategoryInput {
  vacationCategoryGroup: String
  name: String
  timeOption: String
  memo: String
  paidTime: Int
  deductionDays: Int
}
input CreateCompanyInput {
  name: String
  logoUrl: String
  rules: String
  membership: MEMBERSHIP_TYPE
}

input CreateMemberInput {
  lastName: String!
  firstName: String!
  isAdmin: Boolean = false
  joinDate: String!
  exitDate: String
  invitationCode: String!
  memo: String
  leave: Int
}

input UpdateMemberInput {
  lastName: String
  firstName: String
  isAdmin: Boolean = false
  joinDate: String
  exitDate: String
  invitationCode: String
  memo: String
  leave: Int
}

input CreateWorkCheckInput {
  workDay: String!
  quittingTime: String
  breakStartTime: String
  breakFinishTime: String
  totalWorkTime: String
  totalBreakTime: String
}

input UpdateWorkCheckInput {
  workDay: String
  quittingTime: String
  breakStartTime: String
  breakFinishTime: String
  totalWorkTime: String
  totalBreakTime: String
}
